# Generated by Django 4.0.3 on 2024-02-21 15:42

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import saratingsapp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LeadershipProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('position', models.CharField(blank=True, max_length=100, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='leadership/')),
                ('profile_bio', models.TextField(blank=True, null=True)),
                ('profile_ref', models.CharField(blank=True, max_length=90, null=True, unique=True)),
                ('is_non_executive', models.BooleanField(blank=True, default=False, null=True)),
                ('is_executive', models.BooleanField(blank=True, default=False, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_updated', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'db_table': 'leadership_profile',
            },
        ),
        migrations.CreateModel(
            name='RegulatoryArticle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, null=True)),
                ('overview', models.TextField(null=True)),
                ('file_description', models.TextField(blank=True, null=True)),
                ('file_type', models.CharField(blank=True, max_length=10, null=True)),
                ('file_link', models.TextField(blank=True, null=True)),
                ('publication_date', models.DateField(null=True)),
                ('submission_deadline', models.DateField(null=True)),
                ('is_submission_overdue', models.BooleanField(default=False)),
                ('upload_file', models.FileField(blank=True, null=True, upload_to='regulatory_articles/')),
                ('added_on_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on_date', models.DateTimeField(auto_now=True, null=True)),
                ('unique_id', models.CharField(blank=True, max_length=20, null=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Regulatory Articles',
                'db_table': 'regulatory_article',
            },
        ),
        migrations.CreateModel(
            name='ResearchPublication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, null=True)),
                ('overview', models.TextField(blank=True, null=True)),
                ('file_description', models.TextField(blank=True, null=True)),
                ('file_type', models.CharField(blank=True, max_length=10, null=True)),
                ('file_link', models.TextField(blank=True, null=True)),
                ('publication_date', models.DateField(null=True)),
                ('upload_file', models.FileField(blank=True, null=True, upload_to='research_publication/')),
                ('added_on_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on_date', models.DateTimeField(auto_now=True, null=True)),
                ('unique_id', models.CharField(blank=True, max_length=20, null=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Research Publication',
                'db_table': 'research_publication',
            },
        ),
        migrations.CreateModel(
            name='SAREvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_title', models.CharField(blank=True, max_length=100, null=True)),
                ('event_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('event_date', models.DateField(null=True)),
                ('event_time', models.TimeField(null=True)),
                ('is_online', models.BooleanField(blank=True, default=False, null=True)),
                ('meeting_recording_url', models.CharField(blank=True, max_length=1000, null=True)),
                ('presentation_url', models.CharField(blank=True, max_length=1000, null=True)),
                ('event_presentation', models.FileField(blank=True, null=True, upload_to='presentations/')),
                ('is_in_person', models.BooleanField(blank=True, default=False, null=True)),
                ('is_hybrid', models.BooleanField(blank=True, default=False, null=True)),
                ('has_agenda', models.BooleanField(blank=True, default=False, null=True)),
                ('rsvp_needed', models.BooleanField(blank=True, default=False, null=True)),
                ('rsvp_link', models.CharField(blank=True, max_length=1000, null=True)),
                ('event_venue', models.CharField(blank=True, max_length=100, null=True)),
                ('introduction', models.TextField(blank=True, null=True)),
                ('event_image', models.ImageField(blank=True, null=True, upload_to='events/')),
                ('agenda_item_1', models.CharField(blank=True, max_length=255, null=True)),
                ('agenda_item_2', models.CharField(blank=True, max_length=255, null=True)),
                ('agenda_item_3', models.CharField(blank=True, max_length=255, null=True)),
                ('agenda_item_4', models.CharField(blank=True, max_length=255, null=True)),
                ('agenda_item_5', models.CharField(blank=True, max_length=255, null=True)),
                ('agenda_item_6', models.CharField(blank=True, max_length=255, null=True)),
                ('agenda_item_7', models.CharField(blank=True, max_length=255, null=True)),
                ('agenda_item_8', models.CharField(blank=True, max_length=255, null=True)),
                ('agenda_item_9', models.CharField(blank=True, max_length=255, null=True)),
                ('agenda_item_10', models.CharField(blank=True, max_length=255, null=True)),
                ('agenda_item_11', models.CharField(blank=True, max_length=255, null=True)),
                ('agenda_item_12', models.CharField(blank=True, max_length=255, null=True)),
                ('agenda_item_13', models.CharField(blank=True, max_length=255, null=True)),
                ('agenda_item_14', models.CharField(blank=True, max_length=255, null=True)),
                ('agenda_item_15', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'SAR Events',
                'db_table': 'sar_event',
            },
        ),
        migrations.CreateModel(
            name='SARSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_type', models.CharField(choices=[('unsubscribed', 'Unsubscribed'), ('6_month', '6-Month Subscription'), ('annual', 'Annual Subscription')], max_length=100, null=True)),
                ('subscription_fee', models.CharField(choices=[('0', 'Free'), ('30000', '30000'), ('50000', '50000')], max_length=100, null=True)),
                ('item_1', models.CharField(blank=True, choices=[('weekly_economic_nuggets', 'Weekly Economic Nuggets'), ('month_in_the_mirror', 'Month in the Mirror'), ('SAR_Events', 'SAR Events'), ('rating_announcements', 'Rating Announcements'), ('current_credit_rating_reports', 'Current Credit Rating Reports'), ('current_research_reports', 'Current Research Reports'), ('historical_credit_rating_reports', 'Historical Credit Rating Reports'), ('historical_research_reports', 'Historical Research Reports')], max_length=100, null=True)),
                ('item_1_fee', models.CharField(choices=[('free', 'Free'), ('3000', '3000'), ('5000', '5000'), ('free_+_vip_access_to_sar_team', 'Free + VIP Access to SAR Team'), ('full_access', 'Full Access')], max_length=100, null=True)),
                ('item_2', models.CharField(blank=True, choices=[('weekly_economic_nuggets', 'Weekly Economic Nuggets'), ('month_in_the_mirror', 'Month in the Mirror'), ('SAR_Events', 'SAR Events'), ('rating_announcements', 'Rating Announcements'), ('current_credit_rating_reports', 'Current Credit Rating Reports'), ('current_research_reports', 'Current Research Reports'), ('historical_credit_rating_reports', 'Historical Credit Rating Reports'), ('historical_research_reports', 'Historical Research Reports')], max_length=100, null=True)),
                ('item_2_fee', models.CharField(choices=[('free', 'Free'), ('3000', '3000'), ('5000', '5000'), ('free_+_vip_access_to_sar_team', 'Free + VIP Access to SAR Team'), ('full_access', 'Full Access')], max_length=100, null=True)),
                ('item_3', models.CharField(blank=True, choices=[('weekly_economic_nuggets', 'Weekly Economic Nuggets'), ('month_in_the_mirror', 'Month in the Mirror'), ('SAR_Events', 'SAR Events'), ('rating_announcements', 'Rating Announcements'), ('current_credit_rating_reports', 'Current Credit Rating Reports'), ('current_research_reports', 'Current Research Reports'), ('historical_credit_rating_reports', 'Historical Credit Rating Reports'), ('historical_research_reports', 'Historical Research Reports')], max_length=100, null=True)),
                ('item_3_fee', models.CharField(choices=[('free', 'Free'), ('3000', '3000'), ('5000', '5000'), ('free_+_vip_access_to_sar_team', 'Free + VIP Access to SAR Team'), ('full_access', 'Full Access')], max_length=100, null=True)),
                ('item_4', models.CharField(blank=True, choices=[('weekly_economic_nuggets', 'Weekly Economic Nuggets'), ('month_in_the_mirror', 'Month in the Mirror'), ('SAR_Events', 'SAR Events'), ('rating_announcements', 'Rating Announcements'), ('current_credit_rating_reports', 'Current Credit Rating Reports'), ('current_research_reports', 'Current Research Reports'), ('historical_credit_rating_reports', 'Historical Credit Rating Reports'), ('historical_research_reports', 'Historical Research Reports')], max_length=100, null=True)),
                ('item_4_fee', models.CharField(choices=[('free', 'Free'), ('3000', '3000'), ('5000', '5000'), ('free_+_vip_access_to_sar_team', 'Free + VIP Access to SAR Team'), ('full_access', 'Full Access')], max_length=100, null=True)),
                ('item_5', models.CharField(blank=True, choices=[('weekly_economic_nuggets', 'Weekly Economic Nuggets'), ('month_in_the_mirror', 'Month in the Mirror'), ('SAR_Events', 'SAR Events'), ('rating_announcements', 'Rating Announcements'), ('current_credit_rating_reports', 'Current Credit Rating Reports'), ('current_research_reports', 'Current Research Reports'), ('historical_credit_rating_reports', 'Historical Credit Rating Reports'), ('historical_research_reports', 'Historical Research Reports')], max_length=100, null=True)),
                ('item_5_fee', models.CharField(choices=[('free', 'Free'), ('3000', '3000'), ('5000', '5000'), ('free_+_vip_access_to_sar_team', 'Free + VIP Access to SAR Team'), ('full_access', 'Full Access')], max_length=100, null=True)),
                ('item_6', models.CharField(blank=True, choices=[('weekly_economic_nuggets', 'Weekly Economic Nuggets'), ('month_in_the_mirror', 'Month in the Mirror'), ('SAR_Events', 'SAR Events'), ('rating_announcements', 'Rating Announcements'), ('current_credit_rating_reports', 'Current Credit Rating Reports'), ('current_research_reports', 'Current Research Reports'), ('historical_credit_rating_reports', 'Historical Credit Rating Reports'), ('historical_research_reports', 'Historical Research Reports')], max_length=100, null=True)),
                ('item_6_fee', models.CharField(choices=[('free', 'Free'), ('3000', '3000'), ('5000', '5000'), ('free_+_vip_access_to_sar_team', 'Free + VIP Access to SAR Team'), ('full_access', 'Full Access')], max_length=100, null=True)),
                ('item_7', models.CharField(blank=True, choices=[('weekly_economic_nuggets', 'Weekly Economic Nuggets'), ('month_in_the_mirror', 'Month in the Mirror'), ('SAR_Events', 'SAR Events'), ('rating_announcements', 'Rating Announcements'), ('current_credit_rating_reports', 'Current Credit Rating Reports'), ('current_research_reports', 'Current Research Reports'), ('historical_credit_rating_reports', 'Historical Credit Rating Reports'), ('historical_research_reports', 'Historical Research Reports')], max_length=100, null=True)),
                ('item_7_fee', models.CharField(choices=[('free', 'Free'), ('3000', '3000'), ('5000', '5000'), ('free_+_vip_access_to_sar_team', 'Free + VIP Access to SAR Team'), ('full_access', 'Full Access')], max_length=100, null=True)),
                ('item_8', models.CharField(blank=True, choices=[('weekly_economic_nuggets', 'Weekly Economic Nuggets'), ('month_in_the_mirror', 'Month in the Mirror'), ('SAR_Events', 'SAR Events'), ('rating_announcements', 'Rating Announcements'), ('current_credit_rating_reports', 'Current Credit Rating Reports'), ('current_research_reports', 'Current Research Reports'), ('historical_credit_rating_reports', 'Historical Credit Rating Reports'), ('historical_research_reports', 'Historical Research Reports')], max_length=100, null=True)),
                ('item_8_fee', models.CharField(choices=[('free', 'Free'), ('3000', '3000'), ('5000', '5000'), ('free_+_vip_access_to_sar_team', 'Free + VIP Access to SAR Team'), ('full_access', 'Full Access')], max_length=100, null=True)),
                ('subscription_code', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'SAR Subscriptions',
                'db_table': 'sar_subscription',
            },
        ),
        migrations.CreateModel(
            name='YearInReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, null=True)),
                ('reviewed_country', models.CharField(max_length=100, null=True)),
                ('reviewed_year', models.CharField(max_length=5, null=True)),
                ('overview', models.TextField(blank=True, null=True)),
                ('article_body', models.TextField(blank=True, null=True)),
                ('file_description', models.TextField(blank=True, null=True)),
                ('file_type', models.CharField(blank=True, max_length=10, null=True)),
                ('file_link', models.TextField(blank=True, null=True)),
                ('publication_date', models.DateField(null=True)),
                ('upload_file', models.FileField(blank=True, null=True, upload_to='year_in_review/')),
                ('added_on_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on_date', models.DateTimeField(auto_now=True, null=True)),
                ('unique_id', models.CharField(blank=True, max_length=20, null=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Year In Review',
                'db_table': 'year_in_review',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=60, null=True, unique=True)),
                ('first_name', models.CharField(max_length=30, null=True)),
                ('last_name', models.CharField(max_length=30, null=True)),
                ('cell_number', models.CharField(max_length=11, null=True, unique=True, validators=[django.core.validators.MinLengthValidator(10)])),
                ('profile_ref', models.CharField(blank=True, max_length=90, null=True, unique=True)),
                ('is_user_activated', models.BooleanField(blank=True, default=False, null=True)),
                ('has_subscribed', models.BooleanField(default=0)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Profiles',
                'db_table': 'user_profile',
                'ordering': ('user',),
            },
        ),
        migrations.CreateModel(
            name='SectorCommentary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, null=True)),
                ('file_description', models.TextField(blank=True, null=True)),
                ('file_type', models.CharField(blank=True, max_length=10, null=True)),
                ('file_link', models.TextField(blank=True, null=True)),
                ('upload_file', models.FileField(blank=True, null=True, upload_to='sector_commentary/')),
                ('effective_date', models.DateField(null=True)),
                ('added_on_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on_date', models.DateTimeField(auto_now=True, null=True)),
                ('unique_id', models.CharField(blank=True, max_length=20, null=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Sector Commentaries',
                'db_table': 'sector_commentary',
            },
        ),
        migrations.CreateModel(
            name='SARPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, null=True)),
                ('file_description', models.TextField(blank=True, null=True)),
                ('file_type', models.CharField(blank=True, max_length=10, null=True)),
                ('file_link', models.TextField(blank=True, null=True)),
                ('upload_file', models.FileField(blank=True, null=True, upload_to='policy/')),
                ('effective_date', models.DateField(null=True)),
                ('added_on_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on_date', models.DateTimeField(auto_now=True, null=True)),
                ('unique_id', models.CharField(blank=True, max_length=20, null=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'SAR Policies',
                'db_table': 'sar_policy',
            },
        ),
        migrations.CreateModel(
            name='ResearchReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, null=True)),
                ('report_price', models.CharField(max_length=1000, null=True)),
                ('overview', models.TextField(blank=True, null=True)),
                ('file_description', models.TextField(blank=True, null=True)),
                ('file_type', models.CharField(blank=True, max_length=10, null=True)),
                ('file_link', models.TextField(blank=True, null=True)),
                ('publication_date', models.DateField(null=True)),
                ('upload_file', models.FileField(blank=True, null=True, upload_to='report_publication/research_reports/')),
                ('added_on_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on_date', models.DateTimeField(auto_now=True, null=True)),
                ('unique_id', models.CharField(blank=True, max_length=20, null=True)),
                ('is_report_historical', models.BooleanField(default=False)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Research Reports',
                'db_table': 'research_report',
            },
        ),
        migrations.CreateModel(
            name='ResearchPurchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('research_unique_id', models.CharField(blank=True, max_length=20, null=True)),
                ('added_on_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on_date', models.DateTimeField(auto_now=True, null=True)),
                ('purchase_date', models.DateField(auto_now_add=True, null=True)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('purchase_unique_id', models.CharField(blank=True, max_length=20, null=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('research', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='saratingsapp.researchpublication')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Research Purchase',
                'db_table': 'research_purchase',
            },
        ),
        migrations.CreateModel(
            name='RegulatoryArticleComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100, null=True)),
                ('email_address', models.EmailField(max_length=100, null=True)),
                ('company', models.CharField(max_length=100, null=True)),
                ('file_upload', models.FileField(null=True, upload_to='regulatory_articles_comment/')),
                ('submission_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('title', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='saratingsapp.regulatoryarticle')),
            ],
            options={
                'verbose_name_plural': 'Regulatory Article Comments',
                'db_table': 'regulatory_article_comment',
            },
        ),
        migrations.CreateModel(
            name='RatingsPublication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, null=True)),
                ('overview', models.TextField(blank=True, null=True)),
                ('file_description', models.TextField(blank=True, null=True)),
                ('file_type', models.CharField(blank=True, max_length=10, null=True)),
                ('file_link', models.TextField(blank=True, null=True)),
                ('publication_date', models.DateField(null=True)),
                ('upload_file', models.FileField(blank=True, null=True, upload_to='ratings_publication/')),
                ('added_on_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on_date', models.DateTimeField(auto_now=True, null=True)),
                ('unique_id', models.CharField(blank=True, max_length=20, null=True)),
                ('is_report_historical', models.BooleanField(default=False)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Ratings Publication',
                'db_table': 'ratings_publication',
            },
        ),
        migrations.CreateModel(
            name='RatingsMethodology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, null=True)),
                ('overview', models.TextField(blank=True, null=True)),
                ('file_description', models.TextField(blank=True, null=True)),
                ('file_type', models.CharField(blank=True, max_length=10, null=True)),
                ('file_link', models.TextField(blank=True, null=True)),
                ('publication_date', models.DateField(null=True)),
                ('upload_file', models.FileField(blank=True, null=True, upload_to='ratings_methodology/')),
                ('added_on_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on_date', models.DateTimeField(auto_now=True, null=True)),
                ('unique_id', models.CharField(blank=True, max_length=20, null=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Ratings Methodologies',
                'db_table': 'ratings_methodology',
            },
        ),
        migrations.CreateModel(
            name='NuggetPublication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, null=True)),
                ('overview', models.TextField(blank=True, null=True)),
                ('article_body', models.TextField(blank=True, null=True)),
                ('file_description', models.TextField(blank=True, null=True)),
                ('file_type', models.CharField(blank=True, max_length=10, null=True)),
                ('file_link', models.TextField(blank=True, null=True)),
                ('publication_date', models.DateField(null=True)),
                ('upload_file', models.FileField(blank=True, null=True, upload_to='nuggets_publication/')),
                ('added_on_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on_date', models.DateTimeField(auto_now=True, null=True)),
                ('unique_id', models.CharField(blank=True, max_length=20, null=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Nuggets Publication',
                'db_table': 'nugget_publication',
            },
        ),
        migrations.CreateModel(
            name='NuggetComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(null=True)),
                ('username', models.CharField(blank=True, max_length=100, null=True)),
                ('added_on_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on_date', models.DateTimeField(auto_now=True, null=True)),
                ('comment_unique_id', models.CharField(blank=True, max_length=20, null=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('nugget', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='saratingsapp.nuggetpublication')),
            ],
            options={
                'verbose_name_plural': 'Nuggets Comment',
                'db_table': 'nugget_comment',
            },
        ),
        migrations.CreateModel(
            name='MediaPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('file_description', models.TextField(blank=True, null=True)),
                ('file_type', models.CharField(blank=True, max_length=10, null=True)),
                ('file_link', models.TextField(blank=True, null=True)),
                ('file_source', models.CharField(blank=True, max_length=100, null=True)),
                ('interview_platform', models.CharField(blank=True, max_length=100, null=True)),
                ('interview_date', models.DateField(null=True)),
                ('upload_file', models.FileField(blank=True, null=True, upload_to='media_page/')),
                ('added_on_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on_date', models.DateTimeField(auto_now=True, null=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Media Page Files',
                'db_table': 'media_page',
            },
        ),
        migrations.CreateModel(
            name='IssuerCommentary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, null=True)),
                ('file_description', models.TextField(blank=True, null=True)),
                ('file_type', models.CharField(blank=True, max_length=10, null=True)),
                ('file_link', models.TextField(blank=True, null=True)),
                ('upload_file', models.FileField(blank=True, null=True, upload_to='issuer_commentary/')),
                ('effective_date', models.DateField(null=True)),
                ('added_on_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on_date', models.DateTimeField(auto_now=True, null=True)),
                ('unique_id', models.CharField(blank=True, max_length=20, null=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Issuer Commentaries',
                'db_table': 'issuer_commentary',
            },
        ),
        migrations.CreateModel(
            name='FileUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('upload_file', models.FileField(blank=True, null=True, upload_to=saratingsapp.models.doc_upload_location)),
                ('upload_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'file_upload',
            },
        ),
        migrations.CreateModel(
            name='EventRSVP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, null=True)),
                ('first_name', models.CharField(max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100, null=True)),
                ('company', models.CharField(max_length=100, null=True)),
                ('email_address', models.EmailField(max_length=100, null=True)),
                ('contact_number', models.CharField(max_length=100, null=True)),
                ('rsvp_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('rsvp_updated', models.DateTimeField(auto_now=True, null=True)),
                ('confirm_attendance', models.CharField(max_length=20, null=True)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='saratingsapp.sarevent')),
            ],
            options={
                'verbose_name_plural': 'Events RSVP',
                'db_table': 'event_rsvp',
            },
        ),
        migrations.CreateModel(
            name='AnnualReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000, null=True)),
                ('overview', models.TextField(blank=True, null=True)),
                ('file_description', models.TextField(blank=True, null=True)),
                ('file_type', models.CharField(blank=True, max_length=10, null=True)),
                ('file_link', models.TextField(blank=True, null=True)),
                ('publication_date', models.DateField(null=True)),
                ('upload_file', models.FileField(blank=True, null=True, upload_to='reports/annual_reports')),
                ('added_on_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on_date', models.DateTimeField(auto_now=True, null=True)),
                ('unique_id', models.CharField(blank=True, max_length=20, null=True)),
                ('is_report_historical', models.BooleanField(default=False)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Annual Reports',
                'db_table': 'annual_report',
            },
        ),
    ]
